# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core


trigger: none

pool:
 name: 'FarawayLand'  

variables:
  solution: '$(build.sourcesDirectory)\src\PliskyPlumbing.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  buildVersionNumber: '0.0.0.0'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    restoreDirectory: '$(build.sourcesDirectory)\packages\'


- task: PowerShell@2
  inputs:
      targetType: 'inline'
      script: |
            # Versioning Powershell.
            c:\Files\BuildTools\PliskyVersioner\PliskyTool.exe Override -Q=..+.0 -VS=c:\Files\BuildTools\VersionStore\pliskyplumbing.vstore
            c:\Files\BuildTools\PliskyVersioner\PliskyTool.exe UpdateFiles -Root=$(build.sourcesDirectory)\src\ -VS=c:\Files\BuildTools\VersionStore\pliskyplumbing.vstore -Increment -MM=$(build.sourcesDirectory)\LibSrc\_Dependencies\automation\AutoVersion.txt
            c:\Files\BuildTools\PliskyVersioner\PliskyTool.exe Passive -VS=c:\Files\BuildTools\VersionStore\pliskyplumbing.vstore -O=file
            $storedVersion = Get-Content pver-latest.txt
            
            Write-Host "Build Version Is: $storedVersion"
            Write-Host "##vso[task.setvariable variable=buildVersionNumber;]$storedVersion"

- task: PowerShell@2
  inputs:
      targetType: 'inline'
      script: |
            # Test That The Versioning Update Worked
            Write-Host "Integration Build for $(buildVersionNumber)"

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/PliskyListeners.nuspec;'
    versioningScheme: 'off'
    includeSymbols: true

- task: CmdLine@2
  inputs:
    script: |
      echo Stashing the completed Packages      
      copy $(Build.ArtifactStagingDirectory)\Plisky.pliskyplumbing*.nupkg c:\files\publishing\ /y
      
      echo Packages Copied.

- task: CmdLine@2
  inputs:
    script: |
      @echo off
      echo Please Release me let me go      
      c:\files\buildtools\releasescripts\nugetpush.cmd C:\files\publishing\Diags\Plisky.plumbing*.nupkg

      echo Done
